name: CI

env:
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  KINDLEGEN: /home/runner/bin/kindlegen/kindlegen
  GIT_PASSWORD:  ${{ secrets.GIT_PASSWORD }}
  GIT_USERNAME:  ${{ secrets.GIT_USERNAME }}
  AWS_REGION:  ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  # the next bit is very important: 
  # the sample-book will fire an update-event (that this will listen for)
  # that will force this CI pipeline to build the book anew
  repository_dispatch:
    types: update-event
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - name: configure Kindlegen directory
        run: mkdir -p $(dirname $KINDLEGEN ) && ls -la $(dirname $KINDLEGEN)

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "open"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2

      - name: configure optimizer binaries 
        run: sudo apt install  ghostscript  && sudo gem install asciidoctor && sudo gem install asciidoctor-pdf  && sudo gem install rghost && which ghostscript && which asciidoctor-pdf-optimize 
        
      - name: build and run
        run:  mvn -DskipTests=true -f pom.xml clean package  && java -jar target/*jar 






